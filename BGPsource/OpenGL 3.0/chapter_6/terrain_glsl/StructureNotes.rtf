{\rtf1\ansi\ansicpg1252\cocoartf1343\cocoasubrtf140
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\paperw11900\paperh16840\margl1440\margr1440\vieww12600\viewh7800\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\f0\fs24 \cf0 \ul \ulc0 Notes on main.cpp\ulnone  \
\
const int windowWidth = 1024;\
const int windowHeight = 768;\
\
\
  Example example; //the thing we want to run is used as an object.\
\
  if (!example.init()) //Initialize our example\
    \{\
\
        MessageBox(NULL, "Could not initialize the application", "An error occurr\
\
        programWindow.destroy(); //Reset the display and exit\
        return 1;\
    \}\
\
    //This is the mainloop, we render frames until isRunning returns false\
    while(programWindow.isRunning())\
    \{\
        programWindow.processEvents(); //Process any window events\
\
        //We get the time that passed since the last frame\
        float elapsedTime = programWindow.getElapsedSeconds();\
\
        example.prepare(elapsedTime); //Do any pre-rendering logic\
        example.render(); //Render the scene\
\
        programWindow.swapBuffers();\
    \}\
\
    example.shutdown(); //Free any resources\
    programWindow.destroy(); //Destroy the program window\
\
\ul Notes on glwindow.cpp\
\
\ulnone all the stuff that was mentioned in main.cpp.\ul \
\
\ulnone glWIndow::create(int width, int height, int bpp, bool fullscreen)\
glWindow::destroy()\
glWindow::processEvents() //get user input e.c.t\
\
\ul Notes on example.cpp\
\ulnone creates the object m_GLSLProgram which is the one defined in GLSLProgram.h \
::render() \
does normal GL stuff then calls \
m_terrain.render();\
\
\ul Notes on terrain.cpp\
\ulnone generateVertices()\
- generates a VBO and sends it to OpenGL \
\
generateIndices() \
- generates the indices and sends then to OpenGL\
\
render()\
- bind the buffer array and set the vertex attribute pointer to point at it \
- same for colour but not the index for some reason\
- glDrawElements()\
\
\ul GLX windows \
\ulnone - for x based windowed operating systems.\
 }